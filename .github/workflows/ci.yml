name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  create_matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Create matrix
        uses: fabiocaccamo/create-matrix-action@v1
        with:
          matrix: |
            python {3.6}, django {2.0,2.1,2.2,3.1}
            python {3.7}, django {2.0,2.1,2.2,3.1}
            python {3.8}, django {2.2,3.1,3.2}
            python {3.9}, django {2.2,3.1,3.2}
            python {3.10}, django {3.2}
      - name: Set matrix output variable
        id: set_matrix
        run: |
          echo "::set-output name=matrix::$(cat ./matrix.json)"
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}

  test:
    needs: create_matrix
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.create_matrix.outputs.matrix) }}
    name: "Django ${{ matrix.django }} + Python ${{ matrix.python }}"
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}
      - run: pip install poetry
      - run: poetry install
      - run: poetry build --format wheel
      - run: rm -rf django_object_actions
      - run: pip install --force-reinstall dist/*.whl
      - run: poetry add "Django~=${{ matrix.django }}"
      - run: make test

  lint:
    name: "Black"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install Black
        run: pip install black
      - name: Run Black
        run: black --check .
