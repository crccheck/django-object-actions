name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  create_matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Create matrix
        uses: fabiocaccamo/create-matrix-action@v1
        with:
          matrix: |
            python-version {3.7}, django-version {2.0,2.1,2.2,3.0,3.1}
            python-version {3.8}, django-version {2.2,3.0,3.1,3.2,4.0,4.1}
            python-version {3.9}, django-version {2.2,3.0,3.1,3.2,4.0,4.1}
            python-version {3.10}, django-version {3.2,4.0,4.1}
            python-version {3.11}, django-version {3.2,4.0,4.1}
      - name: Set matrix output variable
        id: set_matrix
        run: |
          echo "::set-output name=matrix::$(cat ./matrix.json)"
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}

  test:
    needs: create_matrix
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.create_matrix.outputs.matrix) }}
    name: "Python ${{ matrix.python-version }} + Django ${{ matrix.django-version }}"
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install poetry
      - run: poetry install
      - run: poetry build --format wheel
      - name: Make sure tests use dist instead of source
        run: |
          rm -rf django_object_actions
          pip install --force-reinstall dist/*.whl
      - run: pip install "Django==${{ matrix.django-version }}.*"
      - run: make test

  lint:
    name: "Black"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - run: pip install black
      - run: black --check .
